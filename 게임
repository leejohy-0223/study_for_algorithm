n, m = map(int, input().split())

#방문 위치를 저장하기 위한 맵을 생성하여 0으로 초기화
d = [[0] * m for _ in range(n)]

# 현 캐릭터 x, y, 방향 입력 받기
x, y, direction = map(int, input().split())
d[x][y] = 1 # 현재 좌표 방문 처리

# 맵 정보 입력 받기
array = []
for i in range(n):
  array.append(list(map(int, input().split())))

# 북 동 남 서 방향 정의
dx = [-1, 0, 1, 0]
dy = [0, 1, 0, -1]

# 왼쪽으로 회전 정의
def turn_left():
  global direction
  direction -= 1
  if direction == -1:
    direction = 3
  

# 시뮬레이션 시작
count = 1
turn_time = 0

while True:
  turn_left()
  nx = x + dx[direction]
  ny = y + dy[direction]

  #회전 이후에 이동이 가능한 경우
  if d[nx][ny] == 0 and array[nx][ny] == 0:
    d[nx][ny] = 1
    x = nx
    y = ny
    count += 1
    turn_time = 0
    continue
  
  #회전 이후에 정면에 가보지 않은 칸 또는 바다
  else:
    turn_time += 1
  
  if turn_time == 4:
    nx = x - dx[direction]
    ny = y - dy[direction]
    #뒤로 갈 수 있다면 이동하기
    if array[nx][ny] == 0:
      x = nx
      y = ny
    else:
      break
    turn_time = 0

print(count)
