INF = int(1e9)

#노드의 개수 및 간선의 개수를 입력받기
n = int(input())
m = int(input())

#2차원 리스트(그래프 표현)를 만들고, 모든 값을 무한으로 초기화
graph = [[INF] * (n+1) for _ in range(n+1)]

#자신에서 자신으로 가는 비용은 0으로 초기화
for a in range(1, n+1):
  for b in range(1, n+1):
    if a == b:
      graph[a][b] = 0 
    
#각 간선에 대한 정보를 입력받아, 그 값으로 초기화
for i in range(m):
  a, b, c = map(int, input().split())
  graph[a][b] = c

#점화식에 따라 플로이드 워셜 알고리즘 수행
for i in range(1, n+1):
  for j in range(1, n+1):
    for k in range(1, n+1):
      graph[j][k] = min(graph[j][k], graph[j][i] + graph[i][k])

#결과 출력
for i in range(1, n+1):
  for j in range(1, n+1):
    if graph[i][j] == INF:
      print("infinite")
    else:
      print(graph[i][j], end=" ")
  print()
